on: [push]

jobs:

  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps: 
      - uses: actions/checkout@v4

      - name: Login to GitHub Container registery
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - id: lower-repo
      #   name: Repository to lowercase
      #   run: |
      #     echo "repository=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT
      # TO USE:  ${{ steps.lower-repo.outputs.repository }}


      # - name: Build and push Docker image (manual)
      #   run: | 
      #     docker build -t ghcr.io/${{ github.repository }}/next-devops:latest .
      #     docker push -t ghcr.io/${{ github.repository }}/next-devops:latest

      - name: Build and push Docker image (Docker action)
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/fadibouch/cours-devops/next-devops:${{ github.ref_name }}

  deploy-docker-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build-docker
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: Setup SSH key
        run: | 
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: SCP docker-compose.prod.yml to server
        run: |
          scp docker-compose.prod.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/prod/.

      - name: Connecting to server via SSH
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin && cd ~/prod && sudo docker compose -f docker-compose.prod.yml pull && sudo docker compose -f docker-compose.prod.yml up -d"

  deploy-docker-test:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build-docker
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
      - name: Setup SSH key
        run: | 
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: SCP docker-compose.test.yml to server
        run: |
          scp docker-compose.test.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/test/.

      - name: Connecting to server via SSH
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin && cd ~/test && sudo docker compose -f docker-compose.test.yml pull && sudo docker compose -f docker-compose.test.yml up -d"



