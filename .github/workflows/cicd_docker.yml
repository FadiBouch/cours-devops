on: [push]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ls -lah
  #     - uses: actions/checkout@v4
  #     - run: ls -lah
  #     - name: Cache node_modules
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
  #     - run: | 
  #         npm install
  #         npm run build

  # test:
  #   strategy:
  #     matrix:
  #       browser: [chrome, edge]
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Cache node_modules
  #       uses: actions/cache/restore@v4
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
  #     - name: run Cypress test 
  #       uses: cypress-io/github-action@v6
  #       with: 
  #         install: false
  #         start: npm run dev
  #         browser: ${{ matrix.browser }}
  #     - name: Upload Cypress videos
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: cypress-videos-${{ matrix.browser }}
  #         path: cypress/videos/
  #         retention-days: 5
  #     - uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: cypress-screenshots-${{ matrix.browser }}
  #         path: cypress/screenshots
  #         retention-days: 5

  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps: 
      - uses: actions/checkout@v4

      - name: Login to GitHub Container registery
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push Docker image (manual)
      #   run: | 
      #     docker build -t ghcr.io/${{ github.repository }}/next-devops:latest .
      #     docker push -t ghcr.io/${{ github.repository }}/next-devops:latest

      - name: Build and push Docker image (Docker action)
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/next-devops:latest

  deploy-docker:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Setup SSH key
        run: | 
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Connecting to server via SSH
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.GHCR_PAT }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin && sudo docker pull ghcr.io/fadibouch/cours-devops/next-devops:latest && sudo docker compose up -f docker-compose.prod.yml -d"

   

      
      